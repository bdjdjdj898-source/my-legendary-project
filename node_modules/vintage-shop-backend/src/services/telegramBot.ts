import { TelegramUser } from '../utils/telegram';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot
 */
export class TelegramBotService {
  private readonly botToken: string;
  private readonly adminIds: string[];

  constructor() {
    this.botToken = process.env.TELEGRAM_BOT_TOKEN || '';
    this.adminIds = (process.env.ADMIN_TELEGRAM_IDS || '')
      .split(',')
      .map(s => s.trim())
      .filter(Boolean);

    if (!this.botToken) {
      console.warn('TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã');
    }

    if (this.adminIds.length === 0) {
      console.warn('ADMIN_TELEGRAM_IDS –Ω–µ –∑–∞–¥–∞–Ω—ã, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
   */
  async notifyAdmins(message: string): Promise<void> {
    if (!this.botToken || this.adminIds.length === 0) {
      console.log('–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º –æ—Ç–∫–ª—é—á–µ–Ω—ã');
      return;
    }

    const promises = this.adminIds.map(adminId =>
      this.sendMessage(adminId, message)
    );

    try {
      await Promise.allSettled(promises);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º:', error);
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   */
  async sendMessage(chatId: string, message: string): Promise<void> {
    if (!this.botToken) {
      return;
    }

    const url = `https://api.telegram.org/bot${this.botToken}/sendMessage`;

    try {
      const response = await fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: message,
          parse_mode: 'HTML',
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (${chatId}):`, errorData);
      }
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram (${chatId}):`, error);
    }
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
   */
  formatOrderNotification(
    orderId: number,
    user: TelegramUser,
    itemsCount: number,
    totalAmount: number
  ): string {
    const userName = user.username
      ? `@${user.username}`
      : `${user.first_name}${user.last_name ? ' ' + user.last_name : ''}`;

    return `
üõç <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #${orderId}</b>

üë§ <b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> ${userName}
üì± <b>Telegram ID:</b> ${user.id}
üì¶ <b>–¢–æ–≤–∞—Ä–æ–≤:</b> ${itemsCount} —à—Ç.
üí∞ <b>–°—É–º–º–∞:</b> ${totalAmount.toLocaleString('ru-RU')} ‚ÇΩ

üïí <b>–í—Ä–µ–º—è:</b> ${new Date().toLocaleString('ru-RU')}
    `.trim();
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
export const telegramBot = new TelegramBotService();