import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± Starting database seeding...');

  // Create an admin user (only if not exists)
  const adminTelegramId = process.env.ADMIN_TELEGRAM_IDS?.split(',')[0]?.trim();

  if (adminTelegramId) {
    const adminUser = await prisma.user.upsert({
      where: { telegramId: adminTelegramId },
      update: {
        role: 'admin'
      },
      create: {
        telegramId: adminTelegramId,
        username: 'admin',
        firstName: 'Admin',
        lastName: 'User',
        role: 'admin'
      }
    });
    console.log('‚úÖ Admin user created/updated:', adminUser.telegramId);
  } else {
    console.log('‚ö†Ô∏è  No ADMIN_TELEGRAM_IDS found in environment, skipping admin user creation');
  }

  // Sample products
  const sampleProducts = [
    {
      title: 'Vintage Levi\'s 501 Jeans',
      brand: 'Levi\'s',
      category: '–î–∂–∏–Ω—Å—ã',
      size: '32/32',
      color: '–°–∏–Ω–∏–π',
      condition: 8,
      description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –¥–∂–∏–Ω—Å—ã Levi\'s 501 –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏. –í–∏–Ω—Ç–∞–∂–Ω–∞—è –º–æ–¥–µ–ª—å 90-—Ö –≥–æ–¥–æ–≤.',
      price: 4500.00,
      images: [
        'https://images.unsplash.com/photo-1541099649105-f69ad21f3246?w=500',
        'https://images.unsplash.com/photo-1542272604-787c3835535d?w=500'
      ],
      isActive: true
    },
    {
      title: 'Stone Island –ö—É—Ä—Ç–∫–∞',
      brand: 'Stone Island',
      category: '–ö—É—Ä—Ç–∫–∏',
      size: 'L',
      color: '–ß–µ—Ä–Ω—ã–π',
      condition: 9,
      description: '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –∫—É—Ä—Ç–∫–∞ Stone Island. –†–µ–¥–∫–∞—è –º–æ–¥–µ–ª—å —Å —Å—ä–µ–º–Ω—ã–º –∫–∞–ø—é—à–æ–Ω–æ–º.',
      price: 25000.00,
      images: [
        'https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=500',
        'https://images.unsplash.com/photo-1594633312681-425c7b97ccd1?w=500'
      ],
      isActive: true
    },
    {
      title: 'Supreme Box Logo –¢–æ–ª—Å—Ç–æ–≤–∫–∞',
      brand: 'Supreme',
      category: '–¢–æ–ª—Å—Ç–æ–≤–∫–∏',
      size: 'M',
      color: '–ö—Ä–∞—Å–Ω—ã–π',
      condition: 7,
      description: '–ö—É–ª—å—Ç–æ–≤–∞—è —Ç–æ–ª—Å—Ç–æ–≤–∫–∞ Supreme —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º Box Logo. –°–µ–∑–æ–Ω FW20.',
      price: 15000.00,
      images: [
        'https://images.unsplash.com/photo-1556821840-3a63f95609a7?w=500'
      ],
      isActive: true
    },
    {
      title: 'Nike Air Jordan 1 Retro High',
      brand: 'Nike',
      category: '–û–±—É–≤—å',
      size: '42',
      color: '–ë–µ–ª—ã–π/–ö—Ä–∞—Å–Ω—ã–π',
      condition: 6,
      description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏ Air Jordan 1 –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Ü–≤–µ—Ç–∫–µ Chicago.',
      price: 12000.00,
      images: [
        'https://images.unsplash.com/photo-1540479859555-17af45c78602?w=500'
      ],
      isActive: true
    },
    {
      title: 'Cashmere –°–≤–∏—Ç–µ—Ä Uniqlo',
      brand: 'Uniqlo',
      category: '–°–≤–∏—Ç–µ—Ä—ã',
      size: 'S',
      color: '–ë–µ–∂–µ–≤—ã–π',
      condition: 9,
      description: '–ú—è–≥–∫–∏–π –∫–∞—à–µ–º–∏—Ä–æ–≤—ã–π —Å–≤–∏—Ç–µ—Ä –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–æ–≤—ã–π.',
      price: 3500.00,
      images: [
        'https://images.unsplash.com/photo-1571945153237-4929e783af4a?w=500'
      ],
      isActive: true
    },
    {
      title: 'Vintage Coach –°—É–º–∫–∞',
      brand: 'Coach',
      category: '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã',
      size: 'One Size',
      color: '–ö–æ—Ä–∏—á–Ω–µ–≤—ã–π',
      condition: 8,
      description: '–í–∏–Ω—Ç–∞–∂–Ω–∞—è –∫–æ–∂–∞–Ω–∞—è —Å—É–º–∫–∞ Coach. –ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –∫–æ–∂–∞, –æ—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.',
      price: 8500.00,
      images: [
        'https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=500'
      ],
      isActive: true
    }
  ];

  // Create sample products
  for (const productData of sampleProducts) {
    const product = await prisma.product.upsert({
      where: {
        id: 0 // Will never match, so always creates
      },
      update: {},
      create: {
        ...productData,
        images: JSON.stringify(productData.images)
      }
    });
    console.log('‚úÖ Product created/updated:', product.title);
  }

  console.log('üéâ Database seeding completed successfully!');
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Error during seeding:', e);
    await prisma.$disconnect();
    process.exit(1);
  });