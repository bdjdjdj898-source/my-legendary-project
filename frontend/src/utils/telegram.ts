export function initTelegramWebApp() {
  console.log('üîÑ Initializing Telegram WebApp...');
  console.log('üåç Environment:', import.meta.env.MODE);
  console.log('üîß VITE_MOCK_TELEGRAM:', import.meta.env.VITE_MOCK_TELEGRAM);
  console.log('üîß VITE_DEV_MODE:', import.meta.env.VITE_DEV_MODE);

  // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω mock —Ä–µ–∂–∏–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º mock –¥–∞–Ω–Ω—ã–µ
  if (import.meta.env.VITE_MOCK_TELEGRAM === 'true') {
    console.log('üé≠ Using MOCK Telegram data for development');

    const mockData = {
      initData: 'mock_init_data_for_development',
      user: {
        id: 123456789,
        first_name: 'Dev',
        last_name: 'User',
        username: 'devuser',
        language_code: 'ru',
        is_premium: false
      },
      colorScheme: 'light' as 'light' | 'dark'
    };

    console.log('üé≠ Mock user:', mockData.user);
    console.log('üé≠ Mock colorScheme:', mockData.colorScheme);

    return mockData;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Telegram WebApp SDK –∑–∞–≥—Ä—É–∂–µ–Ω
  const tg = (window as any).Telegram?.WebApp;
  console.log('üì± Telegram WebApp object:', tg);
  console.log('üåç window.Telegram:', (window as any).Telegram);
  console.log('üìÑ document.readyState:', document.readyState);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã Telegram –æ–±—ä–µ–∫—Ç–æ–≤
  console.log('üîç window.TelegramWebviewProxy:', (window as any).TelegramWebviewProxy);
  console.log('üîç window.external:', (window as any).external);

  if (!tg) {
    console.log('‚ö†Ô∏è Telegram WebApp SDK –Ω–µ –Ω–∞–π–¥–µ–Ω - –≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç
    const scripts = Array.from(document.scripts);
    const telegramScript = scripts.find(script => script.src.includes('telegram-web-app.js'));
    console.log('üìú Telegram script –Ω–∞–π–¥–µ–Ω:', !!telegramScript);
    console.log('üåê User Agent:', navigator.userAgent);

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null –≤–º–µ—Å—Ç–æ –≤—ã–±—Ä–æ—Å–∞ –æ—à–∏–±–∫–∏ - –ø—É—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Å–∞–π—Ç
    return null;
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebApp
  tg.ready();
  tg.expand();

  console.log('‚úÖ Telegram WebApp initialized');
  console.log('üìã initData:', tg.initData);
  console.log('üìã initDataUnsafe:', tg.initDataUnsafe);
  console.log('üë§ user:', tg.initDataUnsafe?.user);
  console.log('üé® colorScheme:', tg.colorScheme);
  console.log('üì± platform:', tg.platform);
  console.log('üî¢ version:', tg.version);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  if (!tg.initData || !tg.initDataUnsafe?.user) {
    console.error('‚ùå Telegram WebApp: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.error('initData length:', tg.initData?.length || 0);
    console.error('initDataUnsafe:', JSON.stringify(tg.initDataUnsafe));

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º null - –ø—É—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    return null;
  }

  return {
    initData: tg.initData as string,
    user: tg.initDataUnsafe.user,
    colorScheme: tg.colorScheme
  };
}
